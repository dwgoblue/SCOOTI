function metadata = save_metadata_json(filename, model, config)
%function metadata = save_metadata_json(filename, model, obj, obj_type, obj_c, ...
%    root_path, data_path, out_name, ctrl, kappa, rho, medium, ...
%    genekoflag, rxnkoflag, media_perturbation, upsheet, dwsheet, ...
%    model_path, CFR_model, extra_weight, algorithm)


  %disp(config)

  % Extract nonzero objectives
  obj_indices = find(model.c ~= 0);
  if ~isempty(obj_indices)
    obj_weights = model.c(obj_indices);
    obj_rxns = {model.rxns(obj_indices)};
  else
    obj_weights = 0;
    obj_rxns = '';
  end

  % Decide sample name
  if config.ctrl == 1
    input_path = config.data_path;
  else
    input_path = sprintf('%s%s', config.uplabel, config.dwlabel);
  end

  disp(config.obj)
  disp(config.obj_type)
  disp(config.obj_c)
  disp(config.save_root_path)
  disp(input_path)
  disp(config.out_name)
  disp(config.ctrl)
  disp(config.kappa)
  disp(config.rho)
  disp(config.medium)
  disp(config.genekoflag)
  disp(config.rxnkoflag)
  disp(config.medium_perturbation)
  disp(obj_weights)
  disp(obj_rxns)
  disp(config.GEM_path)
  disp(config.uplabel)
  disp(config.dwlabel)
  disp(config.CFR_model_path)
  disp(config.extraWeight)
  disp(config.algorithm)
  % Build metadata struct
  metadata = struct(...
    'obj', config.obj, ...
    'obj_type', config.obj_type, ...
    'obj_c', config.obj_c, ...
    'output_path', config.save_root_path, ...
    'input_path', input_path, ...
    'file_name', config.out_name, ...
    'with_constraint', config.ctrl, ...
    'CFR_kappa', config.kappa, ...
    'CFR_rho', config.rho, ...
    'medium', config.medium, ...
    'genekoflag', config.genekoflag, ...
    'rxnkoflag', config.rxnkoflag, ...
    'media_perturbation', config.medium_perturbation, ...
    'objWeights', obj_weights, ...
    'objRxns', obj_rxns, ...
    'model_path', config.GEM_path, ...
    'upStage', config.uplabel, ...
    'dwStage', config.dwlabel, ...
    'CFRModel', config.CFR_model_path, ...
    'extraWeight', config.extraWeight, ...
    'algorithm', config.algorithm ...
  );



  % Encode and write to JSON file
  json_str = jsonencode(metadata);
  json_file = sprintf('%s_metadata.json', filename);
  fid = fopen(json_file, 'w');
  fprintf(fid, '%s', json_str);
  fclose(fid);
end

